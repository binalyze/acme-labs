services:
  # Workstation containers (ubuntu based)
  air-workstation-1:
    image: ubuntu:latest
    container_name: air-workstation-1
    hostname: air-workstation-1
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-2:
    image: ubuntu:latest
    container_name: air-workstation-2
    hostname: air-workstation-2
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-3:
    image: ubuntu:latest
    container_name: air-workstation-3
    hostname: air-workstation-3
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-4:
    image: ubuntu:latest
    container_name: air-workstation-4
    hostname: air-workstation-4
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-5:
    image: ubuntu:latest
    container_name: air-workstation-5
    hostname: air-workstation-5
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-6:
    image: ubuntu:latest
    container_name: air-workstation-6
    hostname: air-workstation-6
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-7:
    image: ubuntu:latest
    container_name: air-workstation-7
    hostname: air-workstation-7
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-8:
    image: ubuntu:latest
    container_name: air-workstation-8
    hostname: air-workstation-8
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-9:
    image: ubuntu:latest
    container_name: air-workstation-9
    hostname: air-workstation-9
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  air-workstation-10:
    image: ubuntu:latest
    container_name: air-workstation-10
    hostname: air-workstation-10
    privileged: true
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash /app/deploy.sh
    restart: unless-stopped
    
  # Server containers (debian based)
  air-server-nginx:
    image: nginx:latest
    container_name: air-server-nginx
    hostname: air-server-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & nginx -g 'daemon off;'"
    restart: unless-stopped
    
  air-server-apache:
    image: httpd:latest
    container_name: air-server-apache
    hostname: air-server-apache
    ports:
      - "8081:80"
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & httpd-foreground"
    restart: unless-stopped
    
  air-server-tomcat:
    image: tomcat:latest
    container_name: air-server-tomcat
    hostname: air-server-tomcat
    ports:
      - "8082:8080"
    environment:
      - CATALINA_OPTS=-Xmx512m
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & catalina.sh run"
    restart: unless-stopped
    
  air-server-postgresql:
    image: postgres:latest
    container_name: air-server-postgresql
    hostname: air-server-postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=airlab
      - POSTGRES_USER=airlab
      - POSTGRES_PASSWORD=airlab123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & docker-entrypoint.sh postgres"
    restart: unless-stopped
    
  air-server-mysql:
    image: mysql:latest
    container_name: air-server-mysql
    hostname: air-server-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=airlab123
      - MYSQL_DATABASE=airlab
      - MYSQL_USER=airlab
      - MYSQL_PASSWORD=airlab123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & docker-entrypoint.sh mysqld"
    restart: unless-stopped
    
  air-server-redis:
    image: redis:latest
    container_name: air-server-redis
    hostname: air-server-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & redis-server --appendonly yes"
    restart: unless-stopped
    
  air-server-memcached:
    image: memcached:latest
    container_name: air-server-memcached
    hostname: air-server-memcached
    ports:
      - "11211:11211"
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & memcached -m 64"
    restart: unless-stopped
    
  air-server-mongodb:
    image: mongo:latest
    container_name: air-server-mongodb
    hostname: air-server-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=airlab
      - MONGO_INITDB_ROOT_PASSWORD=airlab123
      - MONGO_INITDB_DATABASE=airlab
    volumes:
      - mongodb_data:/data/db
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & docker-entrypoint.sh mongod"
    restart: unless-stopped
    

  air-server-rabbitmq:
    image: rabbitmq:management
    container_name: air-server-rabbitmq
    hostname: air-server-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=airlab
      - RABBITMQ_DEFAULT_PASS=airlab123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & docker-entrypoint.sh rabbitmq-server"
    restart: unless-stopped
    
  air-server-fileserver:
    image: halverneus/static-file-server:latest
    container_name: air-server-fileserver
    hostname: air-server-fileserver
    ports:
      - "8095:8080"
    environment:
      - FOLDER=/web
      - PORT=8080
    volumes:
      - fileserver_data:/web
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & /serve"
    restart: unless-stopped
    
  air-server-mailserver:
    image: mailserver/docker-mailserver:latest
    container_name: air-server-mailserver
    hostname: air-server-mailserver
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=1
      - ONE_DIR=1
      - DMS_DEBUG=0
    volumes:
      - mailserver_data:/var/mail
      - mailserver_state:/var/mail-state
      - mailserver_logs:/var/log/mail
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & /usr/local/bin/start-mailserver.sh"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    
  air-server-ldap:
    image: osixia/openldap:latest
    container_name: air-server-ldap
    hostname: air-server-ldap
    ports:
      - "389:389"
      - "636:636"
    environment:
      - LDAP_LOG_LEVEL=256
      - LDAP_ORGANISATION=AirLab
      - LDAP_DOMAIN=airlab.local
      - LDAP_BASE_DN=dc=airlab,dc=local
      - LDAP_ADMIN_PASSWORD=airlab123
      - LDAP_CONFIG_PASSWORD=airlab123
      - LDAP_READONLY_USER=false
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & /container/tool/run"
    restart: unless-stopped
    
  air-server-dns:
    image: ubuntu/bind9:latest
    container_name: air-server-dns
    hostname: air-server-dns
    ports:
      - "53:53/udp"
      - "53:53/tcp"
      - "953:953/tcp"
    environment:
      - BIND9_USER=bind
      - TZ=UTC
    volumes:
      - dns_data:/var/lib/bind
      - dns_config:/etc/bind
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & named -g -c /etc/bind/named.conf"
    restart: unless-stopped
    
  air-server-time:
    image: cturra/ntp:latest
    container_name: air-server-time
    hostname: air-server-time
    ports:
      - "123:123/udp"
    environment:
      - NTP_SERVERS=pool.ntp.org
      - LOG_LEVEL=0
    volumes:
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & ntpd -d -n -p /var/run/ntpd.pid"
    restart: unless-stopped
    cap_add:
      - SYS_TIME
    
  air-server-perl:
    image: perl:latest
    container_name: air-server-perl
    hostname: air-server-perl
    ports:
      - "8096:8080"
    environment:
      - PERL_VERSION=5.38
    volumes:
      - perl_data:/app
      - ./deploy.sh:/deploy.sh:ro
      - ./.env.local:/.env.local:ro
    command: /bin/bash -c "bash /deploy.sh & perl -MHTTP::Server::Brick -e 'my $$server = HTTP::Server::Brick->new(port => 8080); $$server->mount(\"/\" => { path => \"/app\" }); $$server->start;'"
    working_dir: /app
    restart: unless-stopped
    
  # Business Application containers

  air-app-nextcloud:
    image: nextcloud:latest
    container_name: air-app-nextcloud
    hostname: air-app-nextcloud
    ports:
      - "8085:80"
    environment:
      - MYSQL_HOST=air-server-mysql
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=airlab
      - MYSQL_PASSWORD=airlab123
    volumes:
      - nextcloud_data:/var/www/html
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & apache2-foreground"
    restart: unless-stopped
    

  air-app-grafana:
    image: grafana/grafana:latest
    container_name: air-app-grafana
    hostname: air-app-grafana
    ports:
      - "8087:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=airlab
      - GF_SECURITY_ADMIN_PASSWORD=airlab123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & /run.sh"
    restart: unless-stopped
    


  air-app-wikijs:
    image: requarks/wiki:2
    container_name: air-app-wikijs
    hostname: air-app-wikijs
    ports:
      - "8090:3000"
    environment:
      - DB_TYPE=postgres
      - DB_HOST=air-server-postgresql
      - DB_PORT=5432
      - DB_USER=airlab
      - DB_PASS=airlab123
      - DB_NAME=wikijs
    volumes:
      - wikijs_data:/wiki/data
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & node server"
    restart: unless-stopped
    

  air-app-keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: air-app-keycloak
    hostname: air-app-keycloak
    ports:
      - "8092:8080"
    environment:
      - KEYCLOAK_ADMIN=airlab
      - KEYCLOAK_ADMIN_PASSWORD=airlab123
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://air-server-postgresql:5432/keycloak
      - KC_DB_USERNAME=airlab
      - KC_DB_PASSWORD=airlab123
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & /opt/keycloak/bin/kc.sh start-dev"
    restart: unless-stopped
    
  air-app-portainer:
    image: portainer/portainer-ce:latest
    container_name: air-app-portainer
    hostname: air-app-portainer
    ports:
      - "8093:9000"
      - "8094:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
      - ./deploy.sh:/app/deploy.sh:ro
      - ./.env.local:/app/.env.local:ro
    command: /bin/bash -c "bash /app/deploy.sh & /portainer"
    restart: unless-stopped
    
volumes:
  postgres_data:
  mysql_data:
  redis_data:
  mongodb_data:
  rabbitmq_data:
  fileserver_data:
  mailserver_data:
  mailserver_state:
  mailserver_logs:
  ldap_data:
  ldap_config:
  dns_data:
  dns_config:
  perl_data:
  nextcloud_data:
  grafana_data:
  wikijs_data:
  keycloak_data:
  portainer_data:

  